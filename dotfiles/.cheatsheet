(sleep $(echo "{1} * 60" | bc) && terminal-notifier -title "TIMER" -message "You already finished {1} minutes") & # set timer on given minute and get a popup message
ab -n 10000 -c 10 {1} # apachebench load test with 10000 requests with 10 connections
alias # show all aliases
cf app {1} # show status of a given app
cf apps # show all apps in the space
cf events {1} # show events of a given app
cf help -a # print out all cf commands
cf login # login to cloud foundry
cf login -a {1} # login to cf with a given api
cf logs {1} # tail actual logs of a given app
cf logs {1} --recent # show recent logs of a given app
cf marketplace # show the marketplace of the space
cf services # show all services in the space
cf target -s {1} # target cf to a given space
curl "https://devops.datenkollektiv.de/renderBannerTxt?font=ogre&text={1}" # create small banner for given text
date +"%V" # show actual calendar week number
docker exec -it {1} /bin/bash # enter running container
docker image history {1} # displays all build steps for the given image
docker images -a # show all images
docker logs {1} # show the logs of a given container
docker ps -a # show all container
docker rm $(docker ps -a -q) # remove all not running container
docker rmi $(docker images -a | grep "{1}" | tr -s " " "#" | cut -d "#" -f 3) -f # delete image by given grep string
docker rmi $(docker images -q -f dangling=true) -f # remove unused images
docker rmi $(docker images -q {1}) -f # delete image by exactly given name
docker run -d --name mongodb -p 27017:27017 mongo:4.0 # run mongo db in a container
docker run -d --name mysqldb -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE={1} -e LANG=C.UTF-8 mysql:5.6 # run mysql db in a container with given db name
docker run -d --name postgresdb -p 5432:5432 -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB={1} postgres:11.0-alpine # run postgres db in a container with given db name
docker run -d --name rabbitmq -p 15672:15672 -p 5672:5672 rabbitmq:3.7.7-management-alpine # run a rabbitmq in a docker container
docker run -d --name redis -p 6379:6379 redis:5.0.0-alpine # run redis in a container
docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube:7.1-alpine # run sonarqube in a container
docker run -d --name ubuntu -it ubuntu:20.04 # run ubuntu os in a container
docker stop {1} && docker rm {1} && docker ps -a # stop and remove a container and show all running container
docker system df # show docker disk usage (images, container, volumes)
docker system info # display system-wide information
docker system prune -f # remove unused images and unused networks
docker-compose build && docker-compose up -d # build images if they have changed and then run them
du -sh * | sort -h # human readable disk usage of content in actual directory - sorted
du -sh {1} # human readable disk usage sum of a given directory
echo $(cat /dev/urandom | env LC_CTYPE=C tr -cd '0-9' | head -c {1}) # generate random number with given digits
find . -name "*.java" -exec grep -ins --color=always -H -A 1 -B 1 "{1}" {} \; # grep given string in java files recursively and print out one line before and after
find . -type d -exec chmod 755 {} \; # change dir mod recursively
find . -type f -exec chmod 644 {} \; # change file mod recursively
find . -type f -name "{1}" # find files recursively with given name/regex
find . -type f -name "{1}" -exec rm -f {} \; # delete files recursively with given name/regex
git add . # add all untracked files
git add . && git commit --amend # git add all and amend the last commit
git branch -D {1} # delete given branch locally
git branch -av # show local and remote branches with last commit message
git checkout -b {1} # checkout actual branch with a new name
git checkout . # checkout actual branch and reset all local changes
git checkout {1} # checkout a given branch
git commit --amend # change last commit (files and message)
git commit -m "{1}" # commit with a given message
git diff $(git branch --show-current) {1} --shortstat # compare diff of actual and given branch
git diff --shortstat {1} # show diff summary from here to given commit
git log -1 --pretty=format:"%C(132)%h - %C(251)%s %C(45)(%ad) %C(33)<%cn>%Creset" --date=local # show last commit message with date and author
git log -7 --pretty=format:"%C(132)%h - %C(251)%s %n   %C(45)(%ad) %C(33)<%cn>%Creset %n    %C(auto)%d%Creset" --date=local # show last 7 commits with date, author and refs
git pull origin # pull branch from origin
git push origin --delete {1} # delete a branch on origin remote
git push origin --force-with-lease # push branch to origin with lease
git push origin :refs/tags/{1} # delete a tag on the remote
git rebase --abort # abort the rebase
git rebase --continue # continue the rebase
git rebase -i {1} # make an interactive rebase against a given branch
git rebase -i {1}^ # make an interactive rebase against given commit hash
git remote -v # show all remote urls
git remote add origin {1} # add an origin remote
git remote add upstream {1} # add an upstream remote
git remote set-url origin {1} # change the url of the origin remote
git remote set-url upstream {1} # change the url of the upstream remote
git reset HEAD~1 # reset last commit and put files to staging area
git stash save {1} # stash the changes with a given message
git status # show actual changes
git update-index --chmod=+x {1} # after adding a fie to git you can mark it as a executable
grep -C 2 -rin {1} . # grep given string recursively and print also 2 lines before and after grepped line and show linenumbers
grep -in --directories=recurse {1} . # new macos - grep given string recursively and show linenumbers
grep -ri {1} . | wc -l # grep given string recursively and count all occurrences
grep -rin {1} . # grep given string recursively and show linenumbers
jar tvf {1} # view contents of a jar file
killall Docker && open /Applications/Docker.app # on macOS restart docker deamon
mvn dependency:list -Dsort=true | grep "^\[INFO\]   " | grep ":" | cut -d " " -f 5 | grep "{1}" | sort -u # get info of given maven dependency in current project
mvn dependency:list -Dsort=true | grep "^\[INFO\]   " | grep ":" | cut -d " " -f 5 | wc -l # count distinct maven dependencies in current project
npm ls --parseable --production | sort -u | wc -l # count distinct prod node_modules in current project
npm ls --parseable | sort -u | wc -l # count distinct dev node modules in current project
printenv {1} # print environment variable
ps aux | grep -i "{1}" | grep -v "grep" | grep -v "cheatsheet" # find grepped process(es)
ps aux | grep -i "{1}" | grep -v "grep" | grep -v "cheatsheet" | tr -s " " | cut -d " " -f 2 | xargs kill -9 # kill grepped process(es)
python -m SimpleHTTPServer 2323 # simple http server on port 2323
tail -f /Library/Tomcat/logs/catalina.out # print tomcat console output
uuidgen | tr '[:upper:]' '[:lower:]' # generate random uuid
whoami # print out your logged in account name
zip -r {1} {1} # zip folder with given name
